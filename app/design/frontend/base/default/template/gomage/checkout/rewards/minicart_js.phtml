<?php
 /**
 * GoMage LightCheckout Extension
 *
 * @category     Extension
 * @copyright    Copyright (c) 2010-2013 GoMage (http://www.gomage.com)
 * @author       GoMage
 * @license      http://www.gomage.com/license-agreement/  Single domain license
 * @terms of use http://www.gomage.com/terms-of-use
 * @version      Release: 5.0
 * @since        Class available since Release 5.0
 */

?>
<script type="text/javascript">
    var slider_ajax_timeout = false;
    var slider_ajax_timeout_delay = 500;
    var last_slider_ajax_request = false;
    var changePointsSpendingUri = '<?php echo $this->getUrl('rewards/cart_redeem/changePointsSpending', array('_forced_secure' => $this->getRequest()->isSecure())) ?>';
    function updateTotalsDueToSpendings(new_spending_amount) {
    	      
        if(last_slider_ajax_request) {
            last_slider_ajax_request.options.onSuccess = function(t) { /* do nothing because a new request has started */}
        }

        checkout.showLoadinfo(); 
        last_slider_ajax_request = new Ajax.Request(
            changePointsSpendingUri, 
            {
                parameters: { points_spending: new_spending_amount  },
                onSuccess: function(t) {
                    var result = t.responseJSON;
                    checkout.hideLoadinfo();
                    checkout.submit(checkout.getFormData(), 'get_totals');
                },
                onFailure: function(){
                	checkout.hideLoadinfo();
    		    } 
            }
        );
    }
    /**
     * Sets the value in the input box and what is displayed to the user.
     * @param val
     * @return
     */
    RedemptionSlider.prototype.setExternalValue = function(val) {
        var pts = val*this.points_per_use;
        if(pts == 1) {
            this.sliderCaption.innerHTML = CAPTION_YOU_WILL_SPEND + ": " + val +
                " " + CAPTION_POINT;
        } else {
            this.sliderCaption.innerHTML = CAPTION_YOU_WILL_SPEND + ": " + val +
                " " + CAPTION_POINTS;
        }
        if(this.sliderValuebox.value != this.getUses()) {
            this.sliderValuebox.value = this.getUses();
            if(slider_ajax_timeout) {
                clearTimeout(slider_ajax_timeout);
            }
            slider_ajax_timeout = setTimeout("updateTotalsDueToSpendings("+pts+")", slider_ajax_timeout_delay);
            if(rSlider.isMaxed()) {
                $('use_all_points').checked = true;
            } else {
                $('use_all_points').checked = false;
            }
            // TODO also update giant cart points block if it's there
        }
    };

    function toggleUseAllPoints(checked) {
        if(checked) {
            rSlider.maximize();
        } else {
            rSlider.slider.setValue(0);
        }
    }
        
    document.observe("dom:loaded", function() {        
        if($('payment-please-wait')) { $('payment-please-wait').hide(); }
	    
    });
	
    function toggleCartRule(checkbox_elem) {
        var add_rule_url = '<?php echo $this->getUrl("rewards/cart_redeem/cartadd"); ?>';
        var remove_rule_url = '<?php echo $this->getUrl("rewards/cart_redeem/cartremove"); ?>';
        var url = '';
        var rid = checkbox_elem.value;
        checkbox_elem.disabled =  true;
        if(checkbox_elem.checked) {
            url = add_rule_url + 'rids/' + rid;
        } else {
            url = remove_rule_url + 'rids/' + rid;
        }
        $(checkbox_elem).next().innerHTML = CAPTION_REFRESHING_CART;
        window.location = url;
        return true;
    }
</script>